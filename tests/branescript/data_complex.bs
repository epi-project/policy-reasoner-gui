// Data deduction, harder
import copy_result;
import data_test;



#![on("foo")]

// Run something straightforward
let data0 := new Data { name := "Test" };
let res1 := run_script(data0);
let gres1 := aggregate(res1, res1);
// Checkpoint commit
let data1 := commit_result("test_data_1", gres1);



// Run something branching
let res2 := null;
if (42 == 32) {
    res2 := run_script(data1);
} else {
    res2 := run_script(data1);
}
let gres2 := aggregate(res2, res2);
// Checkpoint commit
let data2 := commit_result("test_data_2", gres2);



// Run some analysis again repeatedly but without feedback
let gres3 := null;
for (let i := 0; i < 10; i := i + 1) {
    let res3 := run_script(data2);
    gres3 := aggregate(res3, res3);
}
// Checkpoint commit
let data3 := commit_result("test_data_3", gres3);



// Run some analysis again repeatedly but with feedback
let gres4 := copy_result(data3);
for (let i := 0; i < 10; i := i + 1) {
    let res4 := run_script(gres4);
    gres4 := aggregate(res4, res4);
}
// Checkpoint commit
let data4 := commit_result("test_data_4", gres4);



// Merge all sorts of shit together
let data12 := aggregate(data1, data2);
let data34 := aggregate(data3, data4);
let data1234 := aggregate(data12, data34);



// Final commit
return commit_result("test_data_1234", data1234);
